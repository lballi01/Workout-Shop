// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workout_Shop.Data;

#nullable disable

namespace Workout_Shop.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240424112636_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Workout_Shop.Models.Entites.Gyms", b =>
                {
                    b.Property<int>("GymId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GymId");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("Workout_Shop.Models.Entites.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("Workout_Shop.Models.Entites.MainInstructor", b =>
                {
                    b.Property<int>("MainInstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MainInstructorId");

                    b.ToTable("MainInstructors");
                });

            modelBuilder.Entity("Workout_Shop.Models.Entites.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GymId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MainInstructorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkoutCategory")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorkoutId");

                    b.HasIndex("GymId");

                    b.HasIndex("MainInstructorId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("Workout_Shop.Models.Relationships.Instructor_Workout", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstructorId", "WorkoutId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Instructor_Workouts");
                });

            modelBuilder.Entity("Workout_Shop.Models.Entites.Workout", b =>
                {
                    b.HasOne("Workout_Shop.Models.Entites.Gyms", "Gyms")
                        .WithMany("Workouts")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout_Shop.Models.Entites.MainInstructor", "MainInstructor")
                        .WithMany("Workouts")
                        .HasForeignKey("MainInstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gyms");

                    b.Navigation("MainInstructor");
                });

            modelBuilder.Entity("Workout_Shop.Models.Relationships.Instructor_Workout", b =>
                {
                    b.HasOne("Workout_Shop.Models.Entites.Instructor", "Instructor")
                        .WithMany("Instructor_Workout")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout_Shop.Models.Entites.Workout", "Workout")
                        .WithMany("Instructor_Workout")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("Workout_Shop.Models.Entites.Gyms", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("Workout_Shop.Models.Entites.Instructor", b =>
                {
                    b.Navigation("Instructor_Workout");
                });

            modelBuilder.Entity("Workout_Shop.Models.Entites.MainInstructor", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("Workout_Shop.Models.Entites.Workout", b =>
                {
                    b.Navigation("Instructor_Workout");
                });
#pragma warning restore 612, 618
        }
    }
}
